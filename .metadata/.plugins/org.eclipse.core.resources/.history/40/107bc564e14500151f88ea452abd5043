
package uic.semit.Project.ProjectData.configurationFilesJSON;

import java.util.ArrayList;
import java.util.List;
import javax.annotation.Generated;
import com.google.gson.annotations.Expose;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

@Generated("org.jsonschema2pojo")
public class File {

    @Expose
    private String repository;
    @Expose
    private List<ConfigFile> configFiles = new ArrayList<ConfigFile>();

    /**
     * 
     * @return
     *     The repository
     */
    public String getRepository() {
        return repository;
    }

    /**
     * 
     * @param repository
     *     The repository
     */
    public void setRepository(String repository) {
        this.repository = repository;
    }

    /**
     * 
     * @return
     *     The configFiles
     */
    public List<ConfigFile> getConfigFiles() {
        return configFiles;
    }

    /**
     * 
     * @param configFiles
     *     The configFiles
     */
    public void setConfigFiles(List<ConfigFile> configFiles) {
        this.configFiles = configFiles;
    }

    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    @Override
    public int hashCode() {
        return new HashCodeBuilder().append(repository).append(configFiles).toHashCode();
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof File) == false) {
            return false;
        }
        File rhs = ((File) other);
        return new EqualsBuilder().append(repository, rhs.repository).append(configFiles, rhs.configFiles).isEquals();
    }

}
